---
- hosts:
  - maas
  gather_facts: true
  roles:
    - role: naturalis.base
      tags:
        - base
    - role: postgresql
      tags:
        - db

- hosts:
  - maas
  gather_facts: true
  roles:
    - role: ansible-maas
      tags:
        - maas
  tasks:
    - name: Reconfig database | set database host
      lineinfile:
        dest: "/etc/maas/regiond.conf"
        regexp: "^database_host:"
        line: "database_host: {{database.host}}"
      register: db_host
      tags:
        - dbconfig

    - name: Reconfig database | Set database - name
      lineinfile:
        dest: "/etc/maas/regiond.conf"
        regexp: "^database_name:"
        line: "database_name: {{database.name | default('maasdb')}}"
      register: db_name
      tags:
        - dbconfig

    - name: Reconfig database | Set database - pass
      lineinfile:
        dest: "/etc/maas/regiond.conf"
        regexp: "^database_pass:"
        line: "database_pass: {{database.password}}"
      register: db_pass
      tags:
        -dbconfig

    - name: Reconfig database | Set database - port
      lineinfile:
        dest: "/etc/maas/regiond.conf"
        regexp: "^database_port:"
        line: "database_port: {{database.port | default('5432') }}"
      register: db_port
      tags:
        - dbconfig

    - name: Reconfig database | Set database - user
      lineinfile:
        dest: "/etc/maas/regiond.conf"
        regexp: "^database_user:"
        line: "database_user: {{database.user | default('maas') }}"
      register: db_user
      tags:
        - dbconfig

    - name: Reconfig database | Restart Regiond service
      systemd:
        name: "{{ item }}"
        state: restarted
      with_items:
        - maas-regiond
        - bind9
      when: >
        db_host.changed or db_name.changed or db_pass.changed
        or db_port.changed or db_user.changed
      tags:
        - dbconfig

- hosts:
  - postgresql-master
  gather_facts: false
  tasks:
    - name: Allow access to db server from slave
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 5432
        source: 172.16.168.2
        jump: ACCEPT
      tags:
        - iptables

- hosts:
  - postgresql-slave
  gather_facts: false
  vars:
    postgresql_data_directory: /var/lib/postgresql/10/main
  tasks:
    - name: Setup replication | check if replication has been started
      stat:
        path: /etc/postgresql/.replica_started
      register: "replica_started"
      tags:
      - replica

    - name: Setup replication | stop postgresql service
      systemd:
        name: postgresql
        state: stopped
      when: not replica_started.stat.exists
      tags:
      - replica

    - name: Setup replication | cleanup postgresql dir
      file:
        path: "{{ postgresql_data_directory }}"
        state: absent
      when: not replica_started.stat.exists
      tags:
      - replica

    # TODO: use variable to refer to postgresql-master
    - name: Setup replication | start replica
      command: >
        pg_basebackup
          --host=172.16.168.1
          --username=replicator
          --write-recovery-conf
          --pgdata={{ postgresql_data_directory }}
          --progress
      become_user: postgres
      when: not replica_started.stat.exists
      tags:
      - replica

    - name: Setup replication | start postgresql service
      systemd:
        name: postgresql
        state: started
      when: not replica_started.stat.exists
      tags:
      - replica

    - name: Setup replication | set replication started file
      copy:
        dest: "/etc/postgresql/.replica_started"
        content: "if you remove this file, ansible will recreate replication"
        owner: postgres
        group: postgres
        mode: 0400
      tags:
      - replica
